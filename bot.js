const TelegramApi = require("node-telegram-bot-api")
const token = "1150536330:AAGOwL8xJZGXlW4B5y8ZRvyYJb2vEftOlvc" 

const bot = new TelegramApi(token, {polling:true})

const start = () => {

bot.setMyCommands([
    {command: "/soka", description: "–î—ñ–∑–Ω–∞—Ç–∏—Å—è –°–û–ö–£ –¥–Ω—è —ñ —è–∫–∏–π —É –Ω–µ—ó –ª—É–∫"},
    {command: "/stat", description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"}
]);

bot.on("message", async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;

    console.log(msg);
    switch (text) {
        case "/stat":
            return bot.sendMessage(chatId, `—Å—Ç–∞—Ç—ñ—Å—Ç—ñ–∫–∞`)
            break;
            
        case "/soka":
            /*==================== –£—á–∞—Å–Ω–∏–∫–∏  ====================*/
                const users = [
                    {name: "–ú–∞—Ä—Ç–∞ –ñ–æ–ª–æ–±–∞–∫"},
                    {name: "–ú–∞—Ä—ñ—è –ì–∞–±—á–∞–∫"},
                    {name: "–û–ª–µ–≥ –ì–∞–±—á–∞–∫"},
                    {name: "–í—ñ—Ä–∞ –ü—à–µ–Ω–∏—á–∫–∞"},
                    {name: "–°–Ω—ñ–∂–∞–Ω–∞ –°–∞—Ö–∞—Ä—á—É–∫"}
                ]
                let soka = users[randomNum(0, 5)].name
            return bot.sendMessage(chatId, `—Å–æ–∫–∞ –¥–Ω—è ${soka}`)
            
        default:
            return bot.sendMessage(chatId, `–ù–µ –≤–º—ñ—î—à ci –±–∞–≤–∏—Ç–∏ —ñ–¥–∏ –¥–æ–¥–æ–º—Éü§∑‚Äç‚ôÄÔ∏è`);
    }
  })
}

start()






/*==================== —Ä–∞–Ω–¥–æ–º–Ω–µ —á–∏—Å–ª–æ ===================*/
function randomNum(a, b) {
    return  Math.floor(Math.random() * b) + a;
    // Function returns the product of a and b
  }

console.log(randomNum(1,4));

/*==================== –æ—Ç—Ä–∏–º—É—î–º–æ –¥–µ–Ω—å —Ä–æ–∫—É ====================*/

let date365 = 0;

let currentDate = new Date();
let currentYear = currentDate.getFullYear();
let currentMonth = currentDate.getMonth(); 
let currentDay = currentDate.getDate(); 

let monthLength = [31,28,31,30,31,30,31,31,30,31,30,31];

let leapYear = new Date(currentYear, 1, 29); 
if (leapYear.getDate() == 29) { // If it's a leap year, changes 28 to 29
    monthLength[1] = 29;
}

for ( i=0; i < currentMonth; i++ ) { 
    date365 = date365 + monthLength[i];
}
date365 = date365 + currentDay; 
console.log(date365);


/*==================== –º–∞—Å–∏–≤ –∑ –õ—É–∫–∞–º–∏ –¥–Ω—è ====================*/
const looks = [
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/1.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/2.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/3.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/4.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/5.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/6.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    "https://cdn.tlgrm.app/stickers/14d/5af/14d5afd7-6c55-328b-b26b-a8d72beb5530/192/7.webp",
    
]